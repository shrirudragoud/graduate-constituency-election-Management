import { writeFile, mkdir } from 'fs/promises'
import { join } from 'path'
import puppeteer from 'puppeteer'

export interface ThankYouPDFData {
  name: string
  phone: string
  address: string
  district: string
  padvidhar: string
  pin: string
  signupDate: string
}

export async function generateThankYouPDF(data: ThankYouPDFData): Promise<string> {
  let browser;
  try {
    console.log('ЁЯФД Generating Thank You PDF for team member:', data.name)
    
    // Ensure output directory exists
    const outputDir = join(process.cwd(), 'data', 'pdfs')
    await mkdir(outputDir, { recursive: true })
    
    // Generate HTML content with Marathi text
    const htmlContent = generateThankYouHTML(data)
    
    // Launch Puppeteer with better configuration
    const launchOptions: any = {
      headless: 'new',
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        '--disable-accelerated-2d-canvas',
        '--no-first-run',
        '--no-zygote',
        '--disable-gpu',
        '--disable-web-security',
        '--disable-features=VizDisplayCompositor'
      ],
      timeout: 60000
    }

    // Try to use system Chrome if available
    const systemChromePaths = [
      '/usr/bin/google-chrome-stable',
      '/usr/bin/google-chrome',
      '/usr/bin/chromium-browser',
      '/usr/bin/chromium'
    ]

    for (const chromePath of systemChromePaths) {
      try {
        const fs = require('fs')
        if (fs.existsSync(chromePath)) {
          launchOptions.executablePath = chromePath
          console.log('тЬЕ Using system Chrome:', chromePath)
          break
        }
      } catch (error) {
        // Continue to next path
      }
    }

    browser = await puppeteer.launch(launchOptions)
    
    const page = await browser.newPage()
    
    // Set viewport and timeout
    await page.setViewport({ width: 1200, height: 800 })
    page.setDefaultTimeout(30000)
    
    // Set content with simpler wait condition
    await page.setContent(htmlContent, { 
      waitUntil: 'domcontentloaded',
      timeout: 30000
    })
    
    // Wait a bit for any dynamic content to load
    await new Promise(resolve => setTimeout(resolve, 1000))
    
    // Generate PDF
    const pdfPath = join(outputDir, `thank-you-${data.phone}-${Date.now()}.pdf`)
    await page.pdf({
      path: pdfPath,
      format: 'A4',
      printBackground: true,
      margin: {
        top: '0.5in',
        right: '0.5in',
        bottom: '0.5in',
        left: '0.5in'
      },
      timeout: 30000
    })
    
    console.log('тЬЕ Thank You PDF generated successfully:', pdfPath)
    return pdfPath
    
  } catch (error) {
    console.error('тЭМ Error generating Thank You PDF:', error)
    
    // Try fallback method - generate a simple HTML file instead
    try {
      console.log('ЁЯФД Attempting fallback PDF generation...')
      const outputDir = join(process.cwd(), 'data', 'pdfs')
      await mkdir(outputDir, { recursive: true })
      
      const htmlPath = join(outputDir, `thank-you-${data.phone}-${Date.now()}.html`)
      const htmlContent = generateThankYouHTML(data)
      await writeFile(htmlPath, htmlContent)
      
      console.log('тЬЕ Fallback HTML file created:', htmlPath)
      return htmlPath
    } catch (fallbackError) {
      console.error('тЭМ Fallback PDF generation also failed:', fallbackError)
      throw new Error('Failed to generate Thank You PDF: ' + (error as Error).message)
    }
  } finally {
    if (browser) {
      try {
        await browser.close()
      } catch (closeError) {
        console.error('тЭМ Error closing browser:', closeError)
      }
    }
  }
}

function getHeaderLogoBase64(): string {
  try {
    const fs = require('fs')
    const path = require('path')
    const logoPath = path.join(process.cwd(), 'public', 'placeholder-logo.png')
    const logoBuffer = fs.readFileSync(logoPath)
    return logoBuffer.toString('base64')
  } catch (error) {
    console.log('тЪая╕П Could not load header logo, using placeholder')
    // Return a simple placeholder base64 image
    return 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=='
  }
}

function generateThankYouHTML(data: ThankYouPDFData): string {
  const currentDate = new Date().toLocaleDateString('en-IN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })
  
  return `<!DOCTYPE html>
<html lang="mr">
<head>
  <meta charset="UTF-8">
  <title>Thank You - ${data.name}</title>
  <style>
    body {
      font-family: "Times New Roman", serif;
      margin: 0;
      padding: 20px;
      background: #fff;
      font-size: 14px;
      line-height: 1.6;
    }
    .document-container {
      max-width: 800px;
      margin: 0 auto;
      background: #fff;
      border: 2px solid #000;
      padding: 30px;
    }
    .header {
      text-align: center;
      margin-bottom: 30px;
      border-bottom: 3px solid #000;
      padding-bottom: 20px;
      position: relative;
    }
    .header-logo {
      position: absolute;
      left: 0;
      top: 0;
      width: 100px;
      height: 100px;
      border: 2px solid #000;
    }
    .header-text {
      text-align: center;
      width: 100%;
    }
    .header-text h1 {
      margin: 5px 0;
      color: #000;
      font-size: 20px;
      font-weight: bold;
    }
    .header-text h2 {
      margin: 5px 0;
      color: #333;
      font-size: 16px;
      font-weight: bold;
    }
    .header-text h3 {
      margin: 5px 0;
      color: #666;
      font-size: 14px;
      font-weight: normal;
    }
    .content {
      margin: 20px 0;
      text-align: justify;
    }
    .content p {
      margin: 15px 0;
      text-indent: 0;
    }
    .signature-section {
      margin-top: 40px;
      text-align: right;
    }
    .signature-line {
      border-bottom: 1px solid #000;
      width: 200px;
      margin: 20px 0 5px auto;
      height: 30px;
    }
    .signature-text {
      text-align: right;
      font-weight: bold;
    }
    .date-section {
      margin-top: 20px;
      text-align: left;
    }
    .highlight {
      font-weight: bold;
      color: #000;
    }
    .marathi-text {
      font-family: "Times New Roman", serif;
      direction: ltr;
    }
  </style>
</head>
<body>
  <div class="document-container">
    <!-- HEADER -->
    <div class="header">
      <img src="data:image/png;base64,${getHeaderLogoBase64()}" alt="BJP Logo" class="header-logo" />
      <div class="header-text">
        <h1>рднрд╛рд░рддреАрдп рдЬрдирддрд╛ рдкрд╛рд░реНрдЯреА</h1>
        <h2>Bharatiya Janata Party</h2>
        <h3>рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рдкреНрд░рджреЗрд╢</h3>
      </div>
    </div>

    <!-- CONTENT -->
    <div class="content marathi-text">
      <div class="date-section">
        <p><strong>рджрд┐рдирд╛рдВрдХ : ${currentDate}</strong></p>
      </div>

      <p><strong>рд╢реНрд░реА. ${data.name}</strong><br>
      <strong>рдкрддреНрддрд╛:</strong> ${data.address}<br>
      <strong>рдЬрд┐рд▓реНрд╣рд╛:</strong> ${data.district}<br>
      <strong>рдкрд┐рди рдХреЛрдб:</strong> ${data.pin}<br>
      <strong>рдореЛрдмрд╛рдЗрд▓:</strong> ${data.phone}</p>

      <p><strong>рд╕рдкреНрд░реЗрдо рдирдорд╕реНрдХрд╛рд░</strong></p>

      <p>рднрд╛рд░рддреАрдп рдЬрдирддрд╛ рдкрд╛рд░реНрдЯреА рд╕рдВрдШрдЯрди рдкрд░реНрд╡ рдЕрдВрддрд░реНрдЧрдд рд░рд╛рдЬреНрдпрднрд░рд╛рдд рд╕реБрд░реВ рдЕрд╕рдгрд╛рд▒реНрдпрд╛ рдкреНрд░рд╛рдердорд┐рдХ рд╕рджрд╕реНрдпрддрд╛ рдиреЛрдВрджрдгреА рдЕрднрд┐рдпрд╛рдирд╛рдордзреНрдпреЗ рдЖрдкрдг резрежрежреж рд╡реИрдпрдХреНрддрд┐рдХ рд╕рджрд╕реНрдп рдиреЛрдВрджрдгреАрдЪреА рдЙрджреНрджрд┐рд╖реНрдЯ рдкреВрд░реНрдг рдХреЗрд▓реЗ, рддреНрдпрд╛рдмрджреНрджрд▓ рдЖрдкрд▓реЗ рдордирдГрдкреВрд░реНрд╡рдХ рдЕрднрд┐рдирдВрджрди !</p>

      <p>"рд░рд╛рд╖реНрдЯреНрд░ рдкреНрд░рдердо, рддреНрдпрд╛рдирдВрддрд░ рдкрдХреНрд╖ рдЖрдгрд┐ рд╢реЗрд╡рдЯреА рд╕реНрд╡рддрдГ" рд╣рд╛ рдЖрдкрд▓рд╛ рднрд╛рдЬрдк рдкрд░рд┐рд╡рд╛рд░рд╛рдЪрд╛ рдореВрд▓рдордВрддреНрд░ рдордирд╛рдд рдмрд╛рд│рдЧреВрди рдЕрдВрддрдГрдХрд░рдгрд╛рддреВрди рджрд┐рд▓реЗрд▓реЗ рд╕реВрдХреНрд╖реНрдо рдЕрд░рдгреНрдпрд╛рдЪрд╛ рдЖрдкрд▓рд╛ рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рдХрдЯрд┐рдмрджреНрдзрдкрдгрд╛ рдЖрдгрд┐ рдЕрднрд┐рдорд╛рдирд╛рд╕реНрдкрдж рдЖрд╣реЗ.</p>

      <p>рдЖрджрд░рдгреАрдп рдкрдВрддрдкреНрд░рдзрд╛рди рдирд░реЗрдВрджреНрд░ рдореЛрджреАрдЬреАрдВрдЪреНрдпрд╛ рдиреЗрддреГрддреНрд╡рд╛рдд рднрд╛рд░рдд рд╡рд┐рд╢реНрд╡рдЧреБрд░реБ рд╣реЛрдгреНрдпрд╛рдЪреНрдпрд╛ рджрд┐рд╢реЗрдиреЗ рд╡рд╛рдЯрдЪрд╛рд▓ рдХрд░реАрдд рдЖрд╣реЗ. рддрд╕реЗрдЪ рдЖрджрд░рдгреАрдп рдореБрдЦреНрдпрдордВрддреНрд░реА рджреЗрд╡реЗрдВрджреНрд░ рдлрдбрдгрд╡реАрд╕рдЬреАрдВрдЪреНрдпрд╛ рдиреЗрддреГрддреНрд╡рд╛рдд рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рд░рд╛рдЬреНрдпрд╛рддреАрд▓ рд╡рд┐рдХрд╛рд╕рд╛рдЪрд╛ рд╡реЗрдЧ рд╡рд╛рдврд╡рдгреНрдпрд╛рдЪреНрдпрд╛ рджреГрд╖реНрдЯреАрдиреЗ рдкрд╛рдпрд╛рднреВрдд рдХрд╛рдореЗ рд╣реЛрдд рдЖрд╣реЗрдд. рдпрд╛ рдкрд╛рд░реНрд╢реНрд╡рднреВрдореАрд╡рд░ рдЖрдкрдг рд╕рдВрдШрдЯрди рдкрд░реНрд╡ рд╕рджрд╕реНрдпрддрд╛ рдЕрднрд┐рдпрд╛рдирд╛рдд рдХреЗрд▓реЗрд▓реНрдпрд╛ рдЕрдердХ рдкрд░рд┐рд╢реНрд░рдорд╛рдореБрд│реЗ рднрд╛рд░рддреАрдп рдЬрдирддрд╛ рдкрд╛рд░реНрдЯреА рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рд░рд╛рдЬреНрдпрд╛рдд рд╕рд╢рдХреНрдд рдЖрдгрд┐ рдмрд│рдХрдЯ рд╣реЛрдд рдЖрд╣реЗ.</p>

      <p>рд╕рдВрдШрдЯрди рдкрд░реНрд╡рд╛рдд резрежрежреж рдкреНрд░рд╛рдердорд┐рдХ рд╕рджрд╕реНрдпрд╛рдВрдирд╛ рдЖрдкрд▓реНрдпрд╛ рднрд╛рдЬрдк рдкрд░рд┐рд╡рд╛рд░рд╛рдордзреНрдпреЗ рд╕рд╣рднрд╛рдЧреА рдХрд░реВрди рдШреЗрдКрди рдЖрдкрдг рдХреЗрд▓реЗрд▓реНрдпрд╛ рдХрд╛рд░реНрдпрд╛рдЪреА рдиреЛрдВрдж рд╕реЛрдиреЗрд░реА рдЕрдХреНрд╖рд░рд╛рдВрдиреА рдиреЛрдВрджрд▓реА рдЬрд╛рдИрд▓. рд╣реЗ рд░рд╛рд╖реНрдЯреНрд░рд╣рд┐рддрд╛рдЪреЗ рдХрд╛рдо рдЖрд╣реЗрдЪ рддреНрдпрд╛рдмрд░реЛрдмрд░ рд╕рдВрдШрдЯрдиреЗрд▓рд╛ рдмрд│рдХрдЯ рдХрд░рдгреНрдпрд╛рдЪреЗ рдХрд╛рдо рдЖрд╣реЗ.</p>

      <p>рдЖрдкрд▓реНрдпрд╛ рдпрд╛ рдпреЛрдЧрджрд╛рдирд╛рдмрджреНрджрд▓ рдЖрдкрд▓реЗ рдкреБрдиреНрд╣рд╛ рдПрдХрджрд╛ рд╕рд╣рд░реНрд╖ рдЕрднрд┐рдирдВрджрди !</p>

      <div class="signature-section">
        <div class="signature-line"></div>
        <div class="signature-text">
          <p>рдЖрдкрд▓рд╛рдЪ,</p>
          <p><strong>рд░рд╡рд┐рдВрджреНрд░ рдЪрд╡реНрд╣рд╛рдг</strong></p>
          <p>рднрд╛рдЬрдкрд╛ рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░ рдкреНрд░рджреЗрд╢ рдХрд╛рд░реНрдпрдХрд░реА рдЕрдзреНрдпрдХреНрд╖</p>
        </div>
      </div>
    </div>
  </div>
</body>
</html>`
}
