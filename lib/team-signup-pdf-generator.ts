import { readFile } from 'fs/promises'
import { join } from 'path'

export interface TeamSignupPDFData {
  name: string
  phone: string
  address: string
  district: string
  pin: string
  padvidhar: string
  submittedAt: Date
}

export async function generateTeamSignupPDF(data: TeamSignupPDFData): Promise<string> {
  try {
    console.log('üìÑ Generating Team Signup Thank You PDF for:', data.name)
    
    // Read header image and convert to base64
    const headerPath = join(process.cwd(), 'header.png')
    const headerBuffer = await readFile(headerPath)
    const headerBase64 = `data:image/png;base64,${headerBuffer.toString('base64')}`
    
    // Format the date in Marathi format
    const currentDate = new Date()
    const day = currentDate.getDate().toString().padStart(2, '0')
    const month = currentDate.getMonth() + 1
    const year = currentDate.getFullYear()
    
    const marathiMonths = [
      '‡§ú‡§æ‡§®‡•á‡§µ‡§æ‡§∞‡•Ä', '‡§´‡•á‡§¨‡•ç‡§∞‡•Å‡§µ‡§æ‡§∞‡•Ä', '‡§Æ‡§æ‡§∞‡•ç‡§ö', '‡§è‡§™‡•ç‡§∞‡§ø‡§≤', '‡§Æ‡•á', '‡§ú‡•Ç‡§®',
      '‡§ú‡•Å‡§≤‡•à', '‡§ë‡§ó‡§∏‡•ç‡§ü', '‡§∏‡§™‡•ç‡§ü‡•á‡§Ç‡§¨‡§∞', '‡§ë‡§ï‡•ç‡§ü‡•ã‡§¨‡§∞', '‡§®‡•ã‡§µ‡•ç‡§π‡•á‡§Ç‡§¨‡§∞', '‡§°‡§ø‡§∏‡•á‡§Ç‡§¨‡§∞'
    ]
    
    const formattedDate = `‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï : ${day} ${marathiMonths[month - 1]} ${year}`
    
    // Create HTML content for the PDF
    const htmlContent = `
    <!DOCTYPE html>
    <html lang="mr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Team Signup Thank You Letter</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Devanagari:wght@400;700&display=swap" rel="stylesheet">
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Devanagari:wght@400;700&display=swap');
            
            @page {
                margin: 0.5in;
                size: A4;
            }
            
            * {
                font-family: 'Noto Sans Devanagari', 'Arial Unicode MS', 'DejaVu Sans', 'Liberation Sans', 'Lohit Devanagari', 'Mangal', Arial, sans-serif !important;
                font-display: swap;
                unicode-bidi: normal;
                direction: ltr;
            }
            
            body {
                font-family: 'Noto Sans Devanagari', 'Arial Unicode MS', 'DejaVu Sans', 'Liberation Sans', 'Lohit Devanagari', 'Mangal', Arial, sans-serif !important;
                line-height: 1.6;
                color: #000;
                margin: 0;
                padding: 0;
                background: #fff;
                font-display: swap;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
                unicode-bidi: normal;
                direction: ltr;
            }
            
            .letter-container {
                max-width: 100%;
                margin: 0 auto;
                background: #fff;
            }
            
            .header-section {
                text-align: center;
                margin-bottom: 30px;
            }
            
            .header-image {
                max-width: 100%;
                height: auto;
                margin-bottom: 20px;
            }
            
            .date-section {
                text-align: right;
                margin-bottom: 20px;
                font-size: 14px;
                font-weight: bold;
            }
            
            .recipient-section {
                margin-bottom: 20px;
                font-size: 14px;
                line-height: 1.8;
            }
            
            .recipient-name {
                font-weight: bold;
                font-size: 16px;
                margin-bottom: 5px;
            }
            
            .recipient-designation {
                font-size: 14px;
                margin-bottom: 3px;
            }
            
            .salutation {
                font-size: 14px;
                margin-bottom: 20px;
                font-weight: bold;
            }
            
            .letter-body {
                font-size: 14px;
                line-height: 1.8;
                text-align: justify;
                margin-bottom: 20px;
            }
            
            .paragraph {
                margin-bottom: 15px;
                text-indent: 0;
            }
            
            .congratulations {
                font-weight: bold;
                margin-bottom: 15px;
            }
            
            .closing-section {
                margin-top: 30px;
                text-align: right;
            }
            
            .closing-text {
                font-size: 14px;
                margin-bottom: 20px;
            }
            
            .signature-section {
                text-align: right;
                margin-top: 30px;
            }
            
            .signature-name {
                font-weight: bold;
                font-size: 16px;
                margin-bottom: 5px;
            }
            
            .signature-title {
                font-size: 14px;
                font-style: italic;
            }
            
            .footer-section {
                margin-top: 40px;
                font-size: 10px;
                text-align: center;
                color: #666;
                border-top: 1px solid #ccc;
                padding-top: 10px;
            }
            
            .highlight {
                font-weight: bold;
                color: #d32f2f;
            }
        </style>
    </head>
    <body>
        <div class="letter-container">
            <!-- Header Section -->
            <div class="header-section">
                <img src="${headerBase64}" alt="BJP Header" class="header-image">
            </div>
            
            <!-- Date -->
            <div class="date-section">
                ${formattedDate}
            </div>
            
            <!-- Recipient Information -->
            <div class="recipient-section">
                <div class="recipient-name">‡§∂‡•ç‡§∞‡•Ä. ${data.name}</div>
                <div class="recipient-designation">${data.padvidhar}</div>
                <div class="recipient-designation">${data.address}</div>
                <div class="recipient-designation">${data.district} - ${data.pin}</div>
            </div>
            
            <!-- Salutation -->
            <div class="salutation">‡§∏‡§™‡•ç‡§∞‡•á‡§Æ ‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞</div>
            
            <!-- Letter Body -->
            <div class="letter-body">
                <div class="paragraph">
                    ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ú‡§®‡§§‡§æ ‡§™‡§æ‡§∞‡•ç‡§ü‡•Ä ‡§∏‡§Ç‡§ò‡§ü‡§® ‡§™‡§∞‡•ç‡§µ ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§ó‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§≠‡§∞‡§æ‡§§ ‡§∏‡•Å‡§∞‡•Ç ‡§Ö‡§∏‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§§‡§æ ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä ‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§®‡§æ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Ü‡§™‡§£ <span class="highlight">‡•ß‡•¶‡•¶‡•¶ ‡§µ‡•à‡§Ø‡§ï‡•ç‡§§‡§ø‡§ï ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä‡§ö‡•Ä ‡§â‡§¶‡•ç‡§¶‡§ø‡§∑‡•ç‡§ü ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡•á‡§≤‡•á</span>, ‡§§‡•ç‡§Ø‡§æ‡§¨‡§¶‡•ç‡§¶‡§≤ ‡§Ü‡§™‡§≤‡•á ‡§Æ‡§®‡§É‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§≠‡§ø‡§®‡§Ç‡§¶‡§® !
                </div>
                
                <div class="paragraph">
                    "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§™‡•ç‡§∞‡§•‡§Æ, ‡§§‡•ç‡§Ø‡§æ‡§®‡§Ç‡§§‡§∞ ‡§™‡§ï‡•ç‡§∑ ‡§Ü‡§£‡§ø ‡§∂‡•á‡§µ‡§ü‡•Ä ‡§∏‡•ç‡§µ‡§§‡§É" ‡§π‡§æ ‡§Ü‡§™‡§≤‡§æ ‡§≠‡§æ‡§ú‡§™ ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡§æ‡§ö‡§æ ‡§Æ‡•Ç‡§≤‡§Æ‡§Ç‡§§‡•ç‡§∞ ‡§Æ‡§®‡§æ‡§§ ‡§¨‡§æ‡§≥‡§ó‡•Ç‡§® ‡§Ö‡§Ç‡§§‡§É‡§ï‡§∞‡§£‡§æ‡§§‡•Ç‡§® ‡§¶‡§ø‡§≤‡•á‡§≤‡•á ‡§∏‡•Ç‡§ï‡•ç‡§∑‡•ç‡§Æ ‡§Ö‡§∞‡§£‡•ç‡§Ø‡§æ‡§ö‡§æ ‡§Ü‡§™‡§≤‡§æ ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§ï‡§ü‡§ø‡§¨‡§¶‡•ç‡§ß‡§™‡§£‡§æ ‡§Ü‡§£‡§ø ‡§Ö‡§≠‡§ø‡§Æ‡§æ‡§®‡§æ‡§∏‡•ç‡§™‡§¶ ‡§Ü‡§π‡•á.
                </div>
                
                <div class="paragraph">
                    ‡§Ü‡§¶‡§∞‡§£‡•Ä‡§Ø ‡§™‡§Ç‡§§‡§™‡•ç‡§∞‡§ß‡§æ‡§® ‡§®‡§∞‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§Æ‡•ã‡§¶‡•Ä‡§ú‡•Ä‡§Ç‡§ö‡•ç‡§Ø‡§æ ‡§®‡•á‡§§‡•É‡§§‡•ç‡§µ‡§æ‡§§ ‡§≠‡§æ‡§∞‡§§ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§ó‡•Å‡§∞‡•Å ‡§π‡•ã‡§£‡•ç‡§Ø‡§æ‡§ö‡•ç‡§Ø‡§æ ‡§¶‡§ø‡§∂‡•á‡§®‡•á ‡§µ‡§æ‡§ü‡§ö‡§æ‡§≤ ‡§ï‡§∞‡•Ä‡§§ ‡§Ü‡§π‡•á. ‡§§‡§∏‡•á‡§ö ‡§Ü‡§¶‡§∞‡§£‡•Ä‡§Ø ‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§¶‡•á‡§µ‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§´‡§°‡§£‡§µ‡•Ä‡§∏‡§ú‡•Ä‡§Ç‡§ö‡•ç‡§Ø‡§æ ‡§®‡•á‡§§‡•É‡§§‡•ç‡§µ‡§æ‡§§ ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§æ‡§§‡•Ä‡§≤ ‡§µ‡§ø‡§ï‡§æ‡§∏‡§æ‡§ö‡§æ ‡§µ‡•á‡§ó ‡§µ‡§æ‡§¢‡§µ‡§£‡•ç‡§Ø‡§æ‡§ö‡•ç‡§Ø‡§æ ‡§¶‡•É‡§∑‡•ç‡§ü‡•Ä‡§®‡•á ‡§™‡§æ‡§Ø‡§æ‡§≠‡•Ç‡§§ ‡§ï‡§æ‡§Æ‡•á ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á‡§§. ‡§Ø‡§æ ‡§™‡§æ‡§∞‡•ç‡§∂‡•ç‡§µ‡§≠‡•Ç‡§Æ‡•Ä‡§µ‡§∞ ‡§Ü‡§™‡§£ ‡§∏‡§Ç‡§ò‡§ü‡§® ‡§™‡§∞‡•ç‡§µ ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§§‡§æ ‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§®‡§æ‡§§ ‡§ï‡•á‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§Ö‡§•‡§ï ‡§™‡§∞‡§ø‡§∂‡•ç‡§∞‡§Æ‡§æ‡§Æ‡•Å‡§≥‡•á ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ú‡§®‡§§‡§æ ‡§™‡§æ‡§∞‡•ç‡§ü‡•Ä ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§æ‡§§ ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§Ü‡§£‡§ø ‡§¨‡§≥‡§ï‡§ü ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á.
                </div>
                
                <div class="paragraph">
                    ‡§∏‡§Ç‡§ò‡§ü‡§® ‡§™‡§∞‡•ç‡§µ‡§æ‡§§ <span class="highlight">‡•ß‡•¶‡•¶‡•¶ ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§æ‡§Ç‡§®‡§æ</span> ‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§≠‡§æ‡§ú‡§™ ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡§æ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§∏‡§π‡§≠‡§æ‡§ó‡•Ä ‡§ï‡§∞‡•Ç‡§® ‡§ò‡•á‡§ä‡§® ‡§Ü‡§™‡§£ ‡§ï‡•á‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§ö‡•Ä ‡§®‡•ã‡§Ç‡§¶ ‡§∏‡•ã‡§®‡•á‡§∞‡•Ä ‡§Ö‡§ï‡•ç‡§∑‡§∞‡§æ‡§Ç‡§®‡•Ä ‡§®‡•ã‡§Ç‡§¶‡§≤‡•Ä ‡§ú‡§æ‡§à‡§≤. ‡§π‡•á ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§π‡§ø‡§§‡§æ‡§ö‡•á ‡§ï‡§æ‡§Æ ‡§Ü‡§π‡•á‡§ö ‡§§‡•ç‡§Ø‡§æ‡§¨‡§∞‡•ã‡§¨‡§∞ ‡§∏‡§Ç‡§ò‡§ü‡§®‡•á‡§≤‡§æ ‡§¨‡§≥‡§ï‡§ü ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§ö‡•á ‡§ï‡§æ‡§Æ ‡§Ü‡§π‡•á.
                </div>
                
                <div class="congratulations">
                    ‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§Ø‡§æ ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§æ‡§¨‡§¶‡•ç‡§¶‡§≤ ‡§Ü‡§™‡§≤‡•á ‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§è‡§ï‡§¶‡§æ ‡§∏‡§π‡§∞‡•ç‡§∑ ‡§Ö‡§≠‡§ø‡§®‡§Ç‡§¶‡§® !
                </div>
            </div>
            
            <!-- Closing and Signature -->
            <div class="closing-section">
                <div class="closing-text">‡§Ü‡§™‡§≤‡§æ‡§ö,</div>
                <div class="signature-section">
                    <div class="signature-name">‡§∞‡§µ‡§ø‡§Ç‡§¶‡•ç‡§∞ ‡§ö‡§µ‡•ç‡§π‡§æ‡§£</div>
                    <div class="signature-title">‡§≠‡§æ‡§ú‡§™‡§æ ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡§∞‡•Ä ‡§Ö‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑ ‡§Ü‡§Æ‡§¶‡§æ‡§∞, ‡•ß‡•™‡•© ‡§°‡•ã‡§Ç‡§¨‡§ø‡§µ‡§≤‡•Ä ‡§µ‡§ø‡§ß‡§æ‡§®‡§∏‡§≠‡§æ</div>
                </div>
            </div>
            
            <!-- Footer -->
            <div class="footer-section">
                <div>Form ID: ${data.phone}-${data.submittedAt.getTime()}</div>
                <div>Generated on: ${data.submittedAt.toLocaleString('en-GB')}</div>
                <div>This is a computer-generated thank you letter. Please keep this for your records.</div>
            </div>
        </div>
    </body>
    </html>
    `
    
    // Create PDF using Puppeteer
    const puppeteer = await import('puppeteer')
    const browser = await puppeteer.launch({
      headless: true,
      args: [
        '--no-sandbox', 
        '--disable-setuid-sandbox',
        '--disable-web-security',
        '--disable-features=VizDisplayCompositor',
        '--font-render-hinting=none',
        '--disable-font-subpixel-positioning'
      ]
    })
    
    const page = await browser.newPage()
    
    // Set viewport and user agent for better font rendering
    await page.setViewport({ width: 1200, height: 800, deviceScaleFactor: 2 })
    await page.setUserAgent('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36')
    
    // Wait for fonts to load
    await page.setContent(htmlContent, { 
      waitUntil: ['networkidle0', 'domcontentloaded'],
      timeout: 30000
    })
    
    // Wait for fonts to be loaded with timeout
    try {
      await Promise.race([
        page.evaluateHandle('document.fonts.ready'),
        new Promise(resolve => setTimeout(resolve, 5000)) // 5 second timeout
      ])
      console.log('‚úÖ Fonts loaded successfully')
    } catch (error) {
      console.log('‚ö†Ô∏è Font loading timeout, proceeding with PDF generation')
    }
    
    // Additional wait to ensure rendering is complete
    await new Promise(resolve => setTimeout(resolve, 2000))
    
    // Ensure uploads directory exists
    const uploadsDir = join(process.cwd(), 'data', 'pdfs')
    await import('fs').then(fs => fs.promises.mkdir(uploadsDir, { recursive: true }))
    
    // Generate unique filename
    const timestamp = Date.now()
    const filename = `team-thank-you-${data.phone}-${timestamp}.pdf`
    const filepath = join(uploadsDir, filename)
    
    // Generate PDF
    await page.pdf({
      path: filepath,
      format: 'A4',
      printBackground: true,
      margin: {
        top: '0.5in',
        right: '0.5in',
        bottom: '0.5in',
        left: '0.5in'
      }
    })
    
    await browser.close()
    
    console.log('‚úÖ Team Signup Thank You PDF generated successfully:', filepath)
    return filepath
    
  } catch (error) {
    console.error('‚ùå Team Signup PDF generation failed:', error)
    throw error
  }
}



